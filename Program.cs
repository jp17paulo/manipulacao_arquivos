const string filePath = @"D:\dev\meuarquivo.txt";

// File.Create(filePath);

// try {
    // Manipulação de arquivo
    
    /*************************************************************/
    /********************File.AppendText**************************/
    /*************************************************************/

    // using var fileAppend = File.AppendText(filePath);
    // fileAppend.WriteLine("Teste"); // Adiciona o texto ao fim do arquivo
    // fileAppend.Close();

    // ERRADO 
    // var data = File.ReadText(filePath);
    // data += "Meu texto adicional";
    // using var file = File.CreateText(filePath);
    // file.WriteLine(data); // Substitui o conteúdo do arquivo com este texto
    // file.Close();

    // using var file = File.AppendText(filePath);
    // file.WriteLine("Meu texto adicional"); // Adiciona o texto ao fim do arquivo
    // file.Close();
    
    /*************************************************************/
    /*************************************************************/
    /*************************************************************/

    /*************************************************************/
    /********************File.CreateText**************************/
    /*************************************************************/

    // using var fileCreate = File.CreateText(filePath);
    // fileCreate.WriteLine("Teste 2"); // Substitui o conteúdo do arquivo com este texto
    // fileCreate.Close();

    /**************************************************************/
    /**************************************************************/
    /**************************************************************/

    /**************************************************************/
    /********************File.Copy*********************************/
    /**************************************************************/

    // File.Copy(filePath, @"D:\dev\outro.txt");

    /**************************************************************/
    /**************************************************************/
    /**************************************************************/
    
    /**************************************************************/
    /********************File.Move*********************************/
    /**************************************************************/
    
    // File.Move(filePath, @"D:\dev\temp\novo.txt", overwrite: true);

    /**************************************************************/
    /**************************************************************/
    /**************************************************************/

    /**************************************************************/
    /********************File.Replace******************************/
    /**************************************************************/
    
    // File.Replace(@"D:\dev\outro.txt", filePath, @"D:\dev\backup.txt");

    /**************************************************************/
    /**************************************************************/
    /**************************************************************/

    /**************************************************************/
    /********************File.Delete*******************************/
    /**************************************************************/

    // File.Delete(filePath);

    /**************************************************************/
    /**************************************************************/
    /**************************************************************/
    
    /**************************************************************/
    /********************File.Exists*******************************/
    /**************************************************************/

    // var result = File.Exists(filePath); // Retorna um booleano
    // Console.WriteLine(result);
     
    /**************************************************************/
    /**************************************************************/
    /**************************************************************/

    /**************************************************************/
    /********************File.GetLastAccessTime********************/
    /**************************************************************/

    // var time = File.GetLastAccessTime(filePath); // DateTime
    // Console.WriteLine(time);

    /**************************************************************/
    /**************************************************************/
    /**************************************************************/

    /**************************************************************/
    /********************File.GetAttributes************************/
    /**************************************************************/

    var attrs =  File.GetAttributes(filePath);
    if ((attrs & FileAttributes.ReadOnly) == FileAttributes.ReadOnly)
        Console.WriteLine("read-only");

    if ((attrs & FileAttributes.Compressed) == FileAttributes.Compressed)
        Console.WriteLine("compressed");

    /**************************************************************/
    /**************************************************************/
    /**************************************************************/
    
// } catch (Exception ex) {
//     // Capturar exceção
//     throw;
// }
